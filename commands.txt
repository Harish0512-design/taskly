
# creates a migration file with models or tables that need to create in database
python manage.py makemigrations

# creates tables in db using migration files present in migration folder.
python manage.py migrate

# Django Admin Panel

# Creates a superuser to access admin page, it will prompt to input username, email (optional) and password
python manage.py createsuperuser

# run the server and redirect to the url "http://127.0.0.1:8000/admin"
# you can see the admin dashboard login page, "enter username and password" and login.
# you will find Users and Groups tables which are created using authentication app present in installed_apps.

# to see your models in admin panel, register your models in admin.py of your app.

# if you want phonenumber field in model
# pip install phonenumbers django-phonenumber-field


# Social Authentication for Django
# you can login or signup through github, google, facebook , instagram, twitter etc
pip install django-allauth

# path('accounts/', include('allauth.urls'))
# contains accounts/login/, accounts/logout, accounts/signup everything that django needs



# get client_id, secret, key(optional for some applications) from their official site.

# ex: for github. go to the url : https://github.com/settings/applications/new
# generate client id by providing
# 1. Application name : taskly
# 2. home page url : http://127.0.0.1:8000/ (for local testing (provide domain url))
# 3. callback url  : http://127.0.0.1:8000/github/login/callback
# 4. click on generate.

# ex: for google :
# https://console.developers.google.com/
# go to Oath contest screen
# register your application by providing:
# --> app name, gmail, domain if you have
# --> get secret and client_id by clicking on credentials
# -----> click on create credentials
# -----> select oath client id
# -----> provide:
# ----------> Application type, Name for client id,
# ----------> JS origin as http://127.0.0.1:8000/
# ----------> callback url : http://127.0.0.1:8000/accounts/google/login/callback/
# ----------> click on create
# ----------> copy client_id and secret now.


# python-decouple
# to access environment variables (create .env file)
pip install python-decouple

# to access these variables use
# from python